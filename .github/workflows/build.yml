name: build and push

on:
  push:
    tags:
      - '*.*'
      - '*.*.*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract repository name and set environment variables
      run: |
        echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV
        echo "IMAGE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/$REPO_NAME:$IMAGE_TAG .
        echo "IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/$REPO_NAME:$IMAGE_TAG" >> $GITHUB_ENV

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.IMAGE_NAME }}
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'MEDIUM,CRITICAL,HIGH'
      continue-on-error: false

    - name: Push Docker image to Docker Hub
      run: |
        # Tag the image as latest
        docker tag ${{ secrets.DOCKER_USERNAME }}/$REPO_NAME:$IMAGE_TAG ${{ secrets.DOCKER_USERNAME }}/$REPO_NAME:latest
        # Push the specific version tag
        docker push ${{ secrets.DOCKER_USERNAME }}/$REPO_NAME:$IMAGE_TAG
        # Push the latest tag
        docker push ${{ secrets.DOCKER_USERNAME }}/$REPO_NAME:latest